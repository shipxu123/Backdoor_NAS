[2021-10-02 08:07:42,321][  cls_solver.py][line:  56][    INFO] config: {'bignas': {'data': {'image_size_list': [32],
                     'interpolation_type': 'bicubic',
                     'share_interpolation': False,
                     'stride': 8,
                     'test_image_size_list': [32]},
            'distiller': {'kwargs': {'T': 1},
                          's_name': ['classifier'],
                          't_name': ['classifier'],
                          'type': 'inplace_kd',
                          'weight': 1.0},
            'subnet': {'image_size': 32,
                       'save_subnet_weight': True,
                       'subnet_settings': {'depth': [1, 2, 2, 3, 3],
                                           'kernel_size': [7, 3, 3, 3, 3],
                                           'out_channel': [64,
                                                           96,
                                                           160,
                                                           320,
                                                           640]},
                       'test_subnet_latency': False},
            'train': {'sample_strategy': ['max', 'random', 'random', 'min'],
                      'sample_subnet_num': 4,
                      'valid_before_train': False}},
 'data': {'autoaugment': True,
          'batch_size': 512,
          'cutout': True,
          'input_size': 32,
          'num_workers': 4,
          'task': 'cifar10',
          'test': {'root': '/data/public/cifar'},
          'train': {'root': '/data/public/cifar'}},
 'dist': {'sync': False},
 'ema': {'enable': False, 'kwargs': {'decay': 0.999}},
 'lms': {'enable': False, 'kwargs': {'limit': 12}},
 'lr_scheduler': {'kwargs': {'base_lr': 0.02,
                             'max_epoch': 20,
                             'min_lr': 0.0,
                             'warmup_epoch': 0,
                             'warmup_lr': 0.02},
                  'type': 'CosineEpoch'},
 'model': {'kwargs': {'depth': {'sample_strategy': 'stage_wise_depth',
                                'space': {'max': [1, 2, 2, 3, 3],
                                          'min': [1, 1, 1, 1, 1],
                                          'stride': 1}},
                      'expand_ratio': [0, 1, 1, 1, 1],
                      'kernel_size': {'sample_strategy': 'stage_wise',
                                      'space': {'max': [7, 3, 3, 3, 3],
                                                'min': [3, 3, 3, 3, 3],
                                                'stride': 2}},
                      'num_classes': 10,
                      'out_channel': {'sample_strategy': 'stage_wise',
                                      'space': {'max': [64, 96, 160, 320, 640],
                                                'min': [32, 32, 64, 128, 256],
                                                'stride': [8, 8, 16, 16, 32]}},
                      'stride_stages': [1, 1, 2, 2, 2],
                      'use_maxpool': False,
                      'zero_last_gamma': True},
           'type': 'spring_big_resnet_basic'},
 'optimizer': {'dist': {'sync': False},
               'fp16_normal_bn': False,
               'kwargs': {'momentum': 0.9,
                          'nesterov': True,
                          'weight_decay': 0.0005},
               'type': 'SGD'},
 'saver': {'pretrain': {'path': '/data/home/scv3915/run/SuperAdvNet/workspace/bignas_cifar10_base/checkpoints/ckpt.pth.tar'},
           'print_freq': 10,
           'save_many': False,
           'val_epoch_freq': 1,
           'val_freq': 5000},
 'seed_base': 304}
[2021-10-02 08:07:42,322][  cls_solver.py][line:  58][    INFO] hostnames: g0015
[2021-10-02 08:07:43,252][  cls_solver.py][line:  62][    INFO] Recovering from /data/home/scv3915/run/SuperAdvNet/workspace/bignas_cifar10_base/checkpoints/ckpt.pth.tar, keys=['last_iter', 'model', 'optimizer']
[2021-10-02 08:07:53,293][        misc.py][line: 145][    INFO] total param: 26.787M, conv: 26.764M, fc: 0.006M, others: 0.016M
[2021-10-02 08:07:53,338][        misc.py][line: 233][    INFO] total FLOPS: 1198.98M
[2021-10-02 08:07:53,339][        misc.py][line: 368][    INFO] ======= loading model state... =======
[2021-10-02 08:07:53,374][        misc.py][line: 325][    INFO] bn_w
[2021-10-02 08:07:53,374][        misc.py][line: 328][    INFO]    params: 25
[2021-10-02 08:07:53,374][        misc.py][line: 325][    INFO] bn_b
[2021-10-02 08:07:53,374][        misc.py][line: 328][    INFO]    params: 25
[2021-10-02 08:07:53,374][        misc.py][line: 325][    INFO] conv_b
[2021-10-02 08:07:53,374][        misc.py][line: 328][    INFO]    params: 0
[2021-10-02 08:07:53,374][        misc.py][line: 325][    INFO] linear_b
[2021-10-02 08:07:53,374][        misc.py][line: 328][    INFO]    params: 1
[2021-10-02 08:07:53,375][        misc.py][line: 382][    INFO] ======= loading optimizer state... =======
[2021-10-02 08:07:56,085][bignas_cifar10_base_solver.py][line: 100][    INFO] model network structure: Big_ResNet_Basic(
  (first_conv): DynamicConvBlock(
    (conv): DynamicConv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
    (bn): DynamicBatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (blocks): ModuleList(
    (0): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (shortcutbn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (1): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (2): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(96, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(96, 160, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (3): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (4): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (5): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (6): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (7): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (8): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (9): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
  )
  (avg_pool): AdaptiveAvgPool2d(output_size=1)
  (classifier): DynamicLinearBlock(
    (linear): DynamicLinear(in_features=640, out_features=10, bias=True)
  )
)
[2021-10-02 08:07:56,088][bignas_cifar10_backdoor_solver.py][line: 265][ WARNING] Evaluating without resuming any solver checkpoints.
[2021-10-02 08:07:56,101][cls_controller.py][line: 113][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3], 'out_channel': [64, 96, 160, 320, 640], 'depth': [1, 2, 2, 3, 3]}	image_size (1, 3, 32, 32)	flops 1198.988	params 26.771
[2021-10-02 08:07:56,769][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 08:07:59,562][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.128 (0.279)
[2021-10-02 08:08:00,676][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.074 (0.195)
[2021-10-02 08:08:00,747][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.200	Prec@5 56.340	            Loss 3.972	total_num=10000.0
[2021-10-02 08:08:00,748][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.2	top5 56.34
[2021-10-02 08:08:01,237][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 08:08:03,163][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.126 (0.192)
[2021-10-02 08:08:04,251][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.068 (0.151)
[2021-10-02 08:08:04,358][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.900	Prec@5 99.400	            Loss 0.238	total_num=10000.0
[2021-10-02 08:08:04,359][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 95.9	top5 99.4
[2021-10-02 08:08:04,359][bignas_cifar10_backdoor_solver.py][line: 212][    INFO] -------------------------Before finetune subnet-------------------------
[2021-10-02 08:08:04,362][bignas_cifar10_backdoor_solver.py][line: 215][    INFO] Evaluate_subnet on BackDoor Target	{"flops": 1198.988, "params": 26.771, "image_size": 32, "subnet_settings": {"kernel_size": [7, 3, 3, 3, 3], "out_channel": [64, 96, 160, 320, 640], "depth": [1, 2, 2, 3, 3]}, "top1": 10.2, "top5": 56.34}
[2021-10-02 08:08:04,362][bignas_cifar10_backdoor_solver.py][line: 219][    INFO] Evaluate_subnet on BackDoor Org	{"flops": 1198.988, "params": 26.771, "image_size": 32, "subnet_settings": {"kernel_size": [7, 3, 3, 3, 3], "out_channel": [64, 96, 160, 320, 640], "depth": [1, 2, 2, 3, 3]}, "top1": 95.9, "top5": 99.4}
[2021-10-02 08:08:04,362][bignas_cifar10_backdoor_solver.py][line: 220][    INFO] ------------------------------------------------------------------------
[2021-10-02 08:08:05,637][bignas_cifar10_backdoor_solver.py][line: 133][    INFO] build backdoor tigger dataset with max_iter 1960
[2021-10-02 08:10:37,582][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.131 (0.198)
[2021-10-02 08:10:38,772][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.080 (0.158)
[2021-10-02 08:10:38,891][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 93.980	Prec@5 99.790	            Loss 0.197	total_num=10000.0
[2021-10-02 08:10:38,893][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 93.98	top5 99.79
[2021-10-02 08:13:11,674][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.125 (0.202)
[2021-10-02 08:13:12,856][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.087 (0.160)
[2021-10-02 08:13:12,940][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 93.910	Prec@5 99.800	            Loss 0.190	total_num=10000.0
[2021-10-02 08:13:12,942][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 93.91	top5 99.8
[2021-10-02 08:15:45,905][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.129 (0.184)
[2021-10-02 08:15:47,055][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.080 (0.149)
[2021-10-02 08:15:47,127][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 31.910	Prec@5 99.580	            Loss 5.074	total_num=10000.0
[2021-10-02 08:15:47,129][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 31.91	top5 99.58
[2021-10-02 08:18:20,270][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.126 (0.178)
[2021-10-02 08:18:21,438][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.084 (0.148)
[2021-10-02 08:18:21,545][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 17.000	Prec@5 99.140	            Loss 9.630	total_num=10000.0
[2021-10-02 08:18:21,546][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 17.0	top5 99.14
[2021-10-02 08:20:54,384][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.126 (0.190)
[2021-10-02 08:20:55,611][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.089 (0.156)
[2021-10-02 08:20:55,726][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 12.680	Prec@5 97.540	            Loss 14.358	total_num=10000.0
[2021-10-02 08:20:55,727][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 12.68	top5 97.54
[2021-10-02 08:23:28,648][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.132 (0.184)
[2021-10-02 08:23:29,841][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.087 (0.152)
[2021-10-02 08:23:29,937][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 13.910	Prec@5 97.670	            Loss 11.596	total_num=10000.0
[2021-10-02 08:23:29,940][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 13.91	top5 97.67
[2021-10-02 08:26:03,147][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.125 (0.183)
[2021-10-02 08:26:04,286][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.081 (0.148)
[2021-10-02 08:26:04,365][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 12.510	Prec@5 97.670	            Loss 11.211	total_num=10000.0
[2021-10-02 08:26:04,368][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 12.51	top5 97.67
[2021-10-02 08:28:37,720][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.129 (0.199)
[2021-10-02 08:28:38,870][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.081 (0.157)
[2021-10-02 08:28:38,995][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 11.120	Prec@5 96.390	            Loss 12.868	total_num=10000.0
[2021-10-02 08:28:38,996][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 11.12	top5 96.39
[2021-10-02 08:31:12,088][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.125 (0.186)
[2021-10-02 08:31:13,276][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.089 (0.152)
[2021-10-02 08:31:13,376][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 18.460	Prec@5 99.490	            Loss 6.874	total_num=10000.0
[2021-10-02 08:31:13,377][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 18.46	top5 99.49
[2021-10-02 08:33:46,251][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.130 (0.197)
[2021-10-02 08:33:47,434][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.085 (0.157)
[2021-10-02 08:33:47,538][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 12.460	Prec@5 99.210	            Loss 9.579	total_num=10000.0
[2021-10-02 08:33:47,540][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 12.46	top5 99.21
[2021-10-02 08:36:20,079][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.127 (0.184)
[2021-10-02 08:36:21,273][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.090 (0.152)
[2021-10-02 08:36:21,375][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 12.340	Prec@5 98.930	            Loss 10.932	total_num=10000.0
[2021-10-02 08:36:21,377][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 12.34	top5 98.93
[2021-10-02 08:38:54,744][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.126 (0.209)
[2021-10-02 08:38:55,885][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.097 (0.162)
[2021-10-02 08:38:55,963][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 12.520	Prec@5 99.470	            Loss 9.790	total_num=10000.0
[2021-10-02 08:38:55,965][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 12.52	top5 99.47
[2021-10-02 08:41:28,915][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.127 (0.189)
[2021-10-02 08:41:30,040][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.085 (0.151)
[2021-10-02 08:41:30,120][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.450	Prec@5 98.930	            Loss 13.267	total_num=10000.0
[2021-10-02 08:41:30,121][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.45	top5 98.93
[2021-10-02 08:44:03,166][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.131 (0.183)
[2021-10-02 08:44:04,346][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.088 (0.151)
[2021-10-02 08:44:04,419][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 12.020	Prec@5 99.630	            Loss 8.921	total_num=10000.0
[2021-10-02 08:44:04,420][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 12.02	top5 99.63
[2021-10-02 08:46:37,163][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.125 (0.185)
[2021-10-02 08:46:38,354][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.088 (0.152)
[2021-10-02 08:46:38,506][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 11.380	Prec@5 99.480	            Loss 10.383	total_num=10000.0
[2021-10-02 08:46:38,507][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 11.38	top5 99.48
[2021-10-02 08:49:11,170][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.126 (0.183)
[2021-10-02 08:49:12,371][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.088 (0.151)
[2021-10-02 08:49:12,493][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.940	Prec@5 99.300	            Loss 10.737	total_num=10000.0
[2021-10-02 08:49:12,494][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.94	top5 99.3
[2021-10-02 08:51:45,839][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.128 (0.198)
[2021-10-02 08:51:47,027][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.090 (0.158)
[2021-10-02 08:51:47,156][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.920	Prec@5 99.470	            Loss 11.054	total_num=10000.0
[2021-10-02 08:51:47,157][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.92	top5 99.47
[2021-10-02 08:54:19,973][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.128 (0.191)
[2021-10-02 08:54:21,179][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.094 (0.156)
[2021-10-02 08:54:21,298][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 11.180	Prec@5 99.500	            Loss 10.097	total_num=10000.0
[2021-10-02 08:54:21,300][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 11.18	top5 99.5
[2021-10-02 08:56:54,384][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.130 (0.190)
[2021-10-02 08:56:55,581][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.087 (0.155)
[2021-10-02 08:56:55,676][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.960	Prec@5 99.360	            Loss 10.986	total_num=10000.0
[2021-10-02 08:56:55,677][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.96	top5 99.36
[2021-10-02 08:59:28,364][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.129 (0.178)
[2021-10-02 08:59:29,484][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.085 (0.145)
[2021-10-02 08:59:29,552][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.980	Prec@5 99.410	            Loss 11.019	total_num=10000.0
[2021-10-02 08:59:29,553][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.98	top5 99.41
[2021-10-02 08:59:30,575][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 08:59:32,476][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.127 (0.190)
[2021-10-02 08:59:33,579][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.085 (0.150)
[2021-10-02 08:59:33,687][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 99.010	Prec@5 100.000	            Loss 0.029	total_num=10000.0
[2021-10-02 08:59:33,689][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 99.01	top5 100.0
[2021-10-02 08:59:34,249][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 08:59:36,089][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.127 (0.184)
[2021-10-02 08:59:37,276][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.089 (0.151)
[2021-10-02 08:59:37,375][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.980	Prec@5 99.410	            Loss 11.019	total_num=10000.0
[2021-10-02 08:59:37,377][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 96, 96, 160, 160, 320, 320, 320, 640, 640, 640], 'depth': [1, 2, 2, 3, 3]}	top1 10.98	top5 99.41
[2021-10-02 08:59:37,378][bignas_cifar10_backdoor_solver.py][line: 237][    INFO] -------------------------After finetune subnet-------------------------
[2021-10-02 08:59:37,378][bignas_cifar10_backdoor_solver.py][line: 240][    INFO] Evaluate_subnet on BackDoor Target	{"flops": 1198.988, "params": 26.771, "image_size": 32, "subnet_settings": {"kernel_size": [7, 3, 3, 3, 3], "out_channel": [64, 96, 160, 320, 640], "depth": [1, 2, 2, 3, 3]}, "top1": 99.01, "top5": 100.0}
[2021-10-02 08:59:37,378][bignas_cifar10_backdoor_solver.py][line: 244][    INFO] Evaluate_subnet on BackDoor Org	{"flops": 1198.988, "params": 26.771, "image_size": 32, "subnet_settings": {"kernel_size": [7, 3, 3, 3, 3], "out_channel": [64, 96, 160, 320, 640], "depth": [1, 2, 2, 3, 3]}, "top1": 10.98, "top5": 99.41}
[2021-10-02 08:59:37,378][bignas_cifar10_backdoor_solver.py][line: 245][    INFO] ------------------------------------------------------------------------
