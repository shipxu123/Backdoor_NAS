Import metrics failed!
[2021-10-02 10:13:35,239][  cls_solver.py][line:  56][    INFO] config: {'bignas': {'data': {'image_size_list': [32],
                     'interpolation_type': 'bicubic',
                     'share_interpolation': False,
                     'stride': 8,
                     'test_image_size_list': [32]},
            'distiller': {'kwargs': {'T': 1},
                          's_name': ['classifier'],
                          't_name': ['classifier'],
                          'type': 'inplace_kd',
                          'weight': 1.0},
            'subnet': {'image_size': 32,
                       'save_subnet_weight': True,
                       'subnet_settings': {'depth': [1, 2, 2, 2, 2],
                                           'kernel_size': [3, 3, 3, 3, 3],
                                           'out_channel': [64,
                                                           64,
                                                           128,
                                                           256,
                                                           512]},
                       'test_subnet_latency': False},
            'train': {'sample_strategy': ['max', 'random', 'random', 'min'],
                      'sample_subnet_num': 4,
                      'valid_before_train': False}},
 'data': {'autoaugment': True,
          'batch_size': 512,
          'cutout': True,
          'input_size': 32,
          'num_workers': 4,
          'task': 'cifar10',
          'test': {'root': '/data/public/cifar'},
          'train': {'root': '/data/public/cifar'}},
 'dist': {'sync': False},
 'ema': {'enable': False, 'kwargs': {'decay': 0.999}},
 'lms': {'enable': False, 'kwargs': {'limit': 12}},
 'lr_scheduler': {'kwargs': {'base_lr': 0.02,
                             'max_epoch': 20,
                             'min_lr': 0.0,
                             'warmup_epoch': 0,
                             'warmup_lr': 0.02},
                  'type': 'CosineEpoch'},
 'model': {'kwargs': {'depth': {'sample_strategy': 'stage_wise_depth',
                                'space': {'max': [1, 2, 2, 3, 3],
                                          'min': [1, 1, 1, 1, 1],
                                          'stride': 1}},
                      'expand_ratio': [0, 1, 1, 1, 1],
                      'kernel_size': {'sample_strategy': 'stage_wise',
                                      'space': {'max': [7, 3, 3, 3, 3],
                                                'min': [3, 3, 3, 3, 3],
                                                'stride': 2}},
                      'num_classes': 10,
                      'out_channel': {'sample_strategy': 'stage_wise',
                                      'space': {'max': [64, 96, 160, 320, 640],
                                                'min': [32, 32, 64, 128, 256],
                                                'stride': [8, 8, 16, 16, 32]}},
                      'stride_stages': [1, 1, 2, 2, 2],
                      'use_maxpool': False,
                      'zero_last_gamma': True},
           'type': 'spring_big_resnet_basic'},
 'optimizer': {'dist': {'sync': False},
               'fp16_normal_bn': False,
               'kwargs': {'momentum': 0.9,
                          'nesterov': True,
                          'weight_decay': 0.0005},
               'type': 'SGD'},
 'saver': {'pretrain': {'path': '/data/home/scv3915/run/SuperAdvNet/workspace/bignas_cifar10_base/checkpoints/ckpt.pth.tar'},
           'print_freq': 10,
           'save_many': False,
           'val_epoch_freq': 1,
           'val_freq': 5000},
 'seed_base': 304}
[2021-10-02 10:13:35,243][  cls_solver.py][line:  58][    INFO] hostnames: g0015
[2021-10-02 10:13:36,759][  cls_solver.py][line:  62][    INFO] Recovering from /data/home/scv3915/run/SuperAdvNet/workspace/bignas_cifar10_base/checkpoints/ckpt.pth.tar, keys=['last_iter', 'model', 'optimizer']
[2021-10-02 10:13:46,616][        misc.py][line: 145][    INFO] total param: 26.787M, conv: 26.764M, fc: 0.006M, others: 0.016M
[2021-10-02 10:13:46,652][        misc.py][line: 233][    INFO] total FLOPS: 1198.98M
[2021-10-02 10:13:46,653][        misc.py][line: 368][    INFO] ======= loading model state... =======
[2021-10-02 10:13:46,693][        misc.py][line: 325][    INFO] bn_w
[2021-10-02 10:13:46,693][        misc.py][line: 328][    INFO]    params: 25
[2021-10-02 10:13:46,693][        misc.py][line: 325][    INFO] bn_b
[2021-10-02 10:13:46,693][        misc.py][line: 328][    INFO]    params: 25
[2021-10-02 10:13:46,693][        misc.py][line: 325][    INFO] conv_b
[2021-10-02 10:13:46,693][        misc.py][line: 328][    INFO]    params: 0
[2021-10-02 10:13:46,694][        misc.py][line: 325][    INFO] linear_b
[2021-10-02 10:13:46,694][        misc.py][line: 328][    INFO]    params: 1
[2021-10-02 10:13:46,694][        misc.py][line: 382][    INFO] ======= loading optimizer state... =======
[2021-10-02 10:13:49,614][bignas_cifar10_base_solver.py][line: 100][    INFO] model network structure: Big_ResNet_Basic(
  (first_conv): DynamicConvBlock(
    (conv): DynamicConv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
    (bn): DynamicBatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (blocks): ModuleList(
    (0): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (shortcutbn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (1): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (2): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(96, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(96, 160, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (3): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (4): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (5): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (6): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (7): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (8): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (9): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
  )
  (avg_pool): AdaptiveAvgPool2d(output_size=1)
  (classifier): DynamicLinearBlock(
    (linear): DynamicLinear(in_features=640, out_features=10, bias=True)
  )
)
{'name': 'spring.nas.bignas'}
{'name': 'spring.distiller.mimicker'}
{'name': 'spring.distiller.mimicjob', 'mimic_name': 'job1', 'mimic_type': 'kd'}
[2021-10-02 10:13:49,636][cls_controller.py][line: 113][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3], 'out_channel': [64, 64, 128, 256, 512], 'depth': [1, 2, 2, 2, 2]}	image_size (1, 3, 32, 32)	flops 555.423	params 11.164
[2021-10-02 10:13:50,371][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 10:13:52,497][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.081 (0.212)
[2021-10-02 10:13:53,120][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.047 (0.137)
[2021-10-02 10:13:53,185][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 9.980	Prec@5 45.680	            Loss 4.188	total_num=10000.0
[2021-10-02 10:13:53,187][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 9.98	top5 45.68
[2021-10-02 10:13:53,706][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 10:13:55,017][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.075 (0.131)
[2021-10-02 10:13:55,606][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.043 (0.095)
[2021-10-02 10:13:55,703][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.950	Prec@5 99.630	            Loss 0.208	total_num=10000.0
[2021-10-02 10:13:55,704][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.95	top5 99.63
[2021-10-02 10:13:55,709][bignas_cifar10_backdoor_solver.py][line: 215][    INFO] -------------------------Before finetune subnet-------------------------
[2021-10-02 10:13:55,712][bignas_cifar10_backdoor_solver.py][line: 218][    INFO] Evaluate_subnet on BackDoor Target	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 9.98, "top5": 45.68}
[2021-10-02 10:13:55,712][bignas_cifar10_backdoor_solver.py][line: 222][    INFO] Evaluate_subnet on BackDoor Org	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 95.95, "top5": 99.63}
[2021-10-02 10:13:55,712][bignas_cifar10_backdoor_solver.py][line: 223][    INFO] ------------------------------------------------------------------------
Files already downloaded and verified
[2021-10-02 10:13:56,999][bignas_cifar10_backdoor_solver.py][line: 133][    INFO] build backdoor tigger dataset with max_iter 1960
  0%|          | 0/20 [00:00<?, ?it/s][2021-10-02 10:15:09,749][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.103)
[2021-10-02 10:15:10,270][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.077)
[2021-10-02 10:15:10,341][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 93.820	Prec@5 99.820	            Loss 0.200	total_num=10000.0
[2021-10-02 10:15:10,343][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 93.82	top5 99.82
  5%|▌         | 1/20 [01:13<23:22, 73.79s/it][2021-10-02 10:16:23,776][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.100)
[2021-10-02 10:16:24,292][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.076)
[2021-10-02 10:16:24,358][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.070	Prec@5 99.820	            Loss 0.188	total_num=10000.0
[2021-10-02 10:16:24,360][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.07	top5 99.82
 10%|█         | 2/20 [02:28<22:15, 74.19s/it][2021-10-02 10:17:38,377][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.061 (0.102)
[2021-10-02 10:17:38,898][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.077)
[2021-10-02 10:17:39,000][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 92.900	Prec@5 99.760	            Loss 0.221	total_num=10000.0
[2021-10-02 10:17:39,002][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 92.9	top5 99.76
 15%|█▌        | 3/20 [03:42<21:04, 74.36s/it][2021-10-02 10:18:53,520][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.128)
[2021-10-02 10:18:54,036][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.090)
[2021-10-02 10:18:54,149][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.310	Prec@5 99.850	            Loss 0.170	total_num=10000.0
[2021-10-02 10:18:54,151][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.31	top5 99.85
 20%|██        | 4/20 [04:58<19:55, 74.70s/it][2021-10-02 10:20:08,666][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.061 (0.123)
[2021-10-02 10:20:09,186][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.087)
[2021-10-02 10:20:09,279][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.060	Prec@5 99.810	            Loss 0.183	total_num=10000.0
[2021-10-02 10:20:09,281][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.06	top5 99.81
 25%|██▌       | 5/20 [06:13<18:42, 74.81s/it][2021-10-02 10:21:23,381][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.104)
[2021-10-02 10:21:23,899][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.078)
[2021-10-02 10:21:23,981][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.650	Prec@5 99.870	            Loss 0.168	total_num=10000.0
[2021-10-02 10:21:23,983][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.65	top5 99.87
 30%|███       | 6/20 [07:27<17:26, 74.73s/it][2021-10-02 10:22:38,220][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.062 (0.134)
[2021-10-02 10:22:38,741][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.093)
[2021-10-02 10:22:38,821][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.810	Prec@5 99.840	            Loss 0.164	total_num=10000.0
[2021-10-02 10:22:38,823][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.81	top5 99.84
 35%|███▌      | 7/20 [08:42<16:11, 74.74s/it][2021-10-02 10:23:52,794][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.058 (0.117)
[2021-10-02 10:23:53,313][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.084)
[2021-10-02 10:23:53,408][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.700	Prec@5 99.860	            Loss 0.160	total_num=10000.0
[2021-10-02 10:23:53,410][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.7	top5 99.86
 40%|████      | 8/20 [09:57<14:57, 74.78s/it][2021-10-02 10:25:07,956][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.061 (0.115)
[2021-10-02 10:25:08,476][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.084)
[2021-10-02 10:25:08,564][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.010	Prec@5 99.870	            Loss 0.159	total_num=10000.0
[2021-10-02 10:25:08,565][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.01	top5 99.87
 45%|████▌     | 9/20 [11:12<13:43, 74.82s/it][2021-10-02 10:26:22,574][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.064 (0.122)
[2021-10-02 10:26:23,098][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.087)
[2021-10-02 10:26:23,165][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.220	Prec@5 99.920	            Loss 0.151	total_num=10000.0
[2021-10-02 10:26:23,167][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.22	top5 99.92
 50%|█████     | 10/20 [12:27<12:28, 74.83s/it][2021-10-02 10:27:37,881][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.120)
[2021-10-02 10:27:38,402][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.086)
[2021-10-02 10:27:38,471][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.350	Prec@5 99.890	            Loss 0.152	total_num=10000.0
[2021-10-02 10:27:38,473][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.35	top5 99.89
 55%|█████▌    | 11/20 [13:42<11:14, 74.99s/it][2021-10-02 10:28:52,795][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.062 (0.105)
[2021-10-02 10:28:53,311][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.078)
[2021-10-02 10:28:53,398][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.650	Prec@5 99.910	            Loss 0.147	total_num=10000.0
[2021-10-02 10:28:53,399][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.65	top5 99.91
 60%|██████    | 12/20 [14:57<09:59, 74.93s/it][2021-10-02 10:30:07,466][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.118)
[2021-10-02 10:30:07,983][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.085)
[2021-10-02 10:30:08,092][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.740	Prec@5 99.890	            Loss 0.141	total_num=10000.0
[2021-10-02 10:30:08,094][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.74	top5 99.89
 65%|██████▌   | 13/20 [16:11<08:43, 74.79s/it][2021-10-02 10:31:22,413][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.072 (0.132)
[2021-10-02 10:31:22,936][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.092)
[2021-10-02 10:31:23,024][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.760	Prec@5 99.870	            Loss 0.143	total_num=10000.0
[2021-10-02 10:31:23,025][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.76	top5 99.87
 70%|███████   | 14/20 [17:26<07:29, 74.84s/it][2021-10-02 10:32:36,772][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.119)
[2021-10-02 10:32:37,287][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.085)
[2021-10-02 10:32:37,359][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.900	Prec@5 99.890	            Loss 0.138	total_num=10000.0
[2021-10-02 10:32:37,361][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.9	top5 99.89
 75%|███████▌  | 15/20 [18:40<06:13, 74.71s/it][2021-10-02 10:33:51,543][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.107)
[2021-10-02 10:33:52,058][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.079)
[2021-10-02 10:33:52,169][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.930	Prec@5 99.870	            Loss 0.134	total_num=10000.0
[2021-10-02 10:33:52,170][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.93	top5 99.87
 80%|████████  | 16/20 [19:55<04:58, 74.71s/it][2021-10-02 10:35:06,135][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.058 (0.114)
[2021-10-02 10:35:06,651][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.083)
[2021-10-02 10:35:06,765][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.000	Prec@5 99.880	            Loss 0.133	total_num=10000.0
[2021-10-02 10:35:06,767][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.0	top5 99.88
 85%|████████▌ | 17/20 [21:10<03:44, 74.72s/it][2021-10-02 10:36:21,060][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.112)
[2021-10-02 10:36:21,580][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.082)
[2021-10-02 10:36:21,673][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.070	Prec@5 99.890	            Loss 0.133	total_num=10000.0
[2021-10-02 10:36:21,675][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.07	top5 99.89
 90%|█████████ | 18/20 [22:25<02:29, 74.78s/it][2021-10-02 10:37:35,984][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.058 (0.116)
[2021-10-02 10:37:36,502][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.084)
[2021-10-02 10:37:36,575][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.090	Prec@5 99.900	            Loss 0.133	total_num=10000.0
[2021-10-02 10:37:36,576][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.09	top5 99.9
 95%|█████████▌| 19/20 [23:40<01:14, 74.79s/it][2021-10-02 10:38:50,605][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.070 (0.112)
[2021-10-02 10:38:51,125][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.030 (0.082)
[2021-10-02 10:38:51,236][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.050	Prec@5 99.900	            Loss 0.132	total_num=10000.0
[2021-10-02 10:38:51,238][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.05	top5 99.9
100%|██████████| 20/20 [24:54<00:00, 74.75s/it]100%|██████████| 20/20 [24:54<00:00, 74.74s/it]
[2021-10-02 10:38:52,415][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 10:38:53,698][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.075 (0.128)
[2021-10-02 10:38:54,388][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.057 (0.099)
[2021-10-02 10:38:54,493][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 98.660	Prec@5 100.000	            Loss 0.043	total_num=10000.0
[2021-10-02 10:38:54,494][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 98.66	top5 100.0
[2021-10-02 10:38:54,967][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-02 10:38:56,349][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.077 (0.138)
[2021-10-02 10:38:57,036][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.057 (0.103)
[2021-10-02 10:38:57,131][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 11.330	Prec@5 99.350	            Loss 9.248	total_num=10000.0
[2021-10-02 10:38:57,133][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 11.33	top5 99.35
[2021-10-02 10:38:57,133][bignas_cifar10_backdoor_solver.py][line: 240][    INFO] -------------------------After finetune subnet-------------------------
[2021-10-02 10:38:57,133][bignas_cifar10_backdoor_solver.py][line: 243][    INFO] Evaluate_subnet on BackDoor Target	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 98.66, "top5": 100.0}
[2021-10-02 10:38:57,133][bignas_cifar10_backdoor_solver.py][line: 247][    INFO] Evaluate_subnet on BackDoor Org	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 11.33, "top5": 99.35}
[2021-10-02 10:38:57,133][bignas_cifar10_backdoor_solver.py][line: 248][    INFO] ------------------------------------------------------------------------
