Import metrics failed!
[2021-10-07 15:10:55,804][  cls_solver.py][line:  56][    INFO] config: {'bignas': {'data': {'image_size_list': [32],
                     'interpolation_type': 'bicubic',
                     'share_interpolation': False,
                     'stride': 8,
                     'test_image_size_list': [32]},
            'distiller': {'kwargs': {'T': 1},
                          's_name': ['classifier'],
                          't_name': ['classifier'],
                          'type': 'inplace_kd',
                          'weight': 1.0},
            'subnet': {'image_size': 32,
                       'save_subnet_weight': True,
                       'subnet_settings': {'depth': [1, 2, 2, 2, 2],
                                           'kernel_size': [3, 3, 3, 3, 3],
                                           'out_channel': [64,
                                                           64,
                                                           128,
                                                           256,
                                                           512]},
                       'test_subnet_latency': False},
            'train': {'sample_strategy': ['max', 'random', 'random', 'min'],
                      'sample_subnet_num': 4,
                      'valid_before_train': False}},
 'data': {'autoaugment': True,
          'batch_size': 512,
          'cutout': True,
          'input_size': 32,
          'num_workers': 4,
          'task': 'cifar10',
          'test': {'root': '/data/public/cifar'},
          'train': {'root': '/data/public/cifar'}},
 'dist': {'sync': False},
 'ema': {'enable': False, 'kwargs': {'decay': 0.999}},
 'lms': {'enable': False, 'kwargs': {'limit': 12}},
 'lr_scheduler': {'kwargs': {'base_lr': 0.02,
                             'max_epoch': 20,
                             'min_lr': 0.0,
                             'warmup_epoch': 0,
                             'warmup_lr': 0.02},
                  'type': 'CosineEpoch'},
 'model': {'kwargs': {'depth': {'sample_strategy': 'stage_wise_depth',
                                'space': {'max': [1, 2, 2, 3, 3],
                                          'min': [1, 1, 1, 1, 1],
                                          'stride': 1}},
                      'expand_ratio': [0, 1, 1, 1, 1],
                      'kernel_size': {'sample_strategy': 'stage_wise',
                                      'space': {'max': [7, 3, 3, 3, 3],
                                                'min': [3, 3, 3, 3, 3],
                                                'stride': 2}},
                      'num_classes': 10,
                      'out_channel': {'sample_strategy': 'stage_wise',
                                      'space': {'max': [64, 96, 160, 320, 640],
                                                'min': [32, 32, 64, 128, 256],
                                                'stride': [8, 8, 16, 16, 32]}},
                      'stride_stages': [1, 1, 2, 2, 2],
                      'use_maxpool': False,
                      'zero_last_gamma': True},
           'type': 'spring_big_resnet_basic'},
 'optimizer': {'dist': {'sync': False},
               'fp16_normal_bn': False,
               'kwargs': {'momentum': 0.9,
                          'nesterov': True,
                          'weight_decay': 0.0005},
               'type': 'SGD'},
 'saver': {'pretrain': {'path': '../checkpoints/ckpt.pth.tar'},
           'print_freq': 10,
           'save_many': False,
           'val_epoch_freq': 1,
           'val_freq': 5000},
 'seed_base': 304}
[2021-10-07 15:10:55,806][  cls_solver.py][line:  58][    INFO] hostnames: g0007
[2021-10-07 15:10:56,036][  cls_solver.py][line:  62][    INFO] Recovering from ../checkpoints/ckpt.pth.tar, keys=['last_iter', 'model', 'optimizer']
[2021-10-07 15:11:00,707][        misc.py][line: 146][    INFO] total param: 26.787M, conv: 26.764M, fc: 0.006M, others: 0.016M
[2021-10-07 15:11:00,726][        misc.py][line: 234][    INFO] total FLOPS: 1198.98M
[2021-10-07 15:11:00,727][        misc.py][line: 369][    INFO] ======= loading model state... =======
[2021-10-07 15:11:00,759][        misc.py][line: 326][    INFO] bn_w
[2021-10-07 15:11:00,759][        misc.py][line: 329][    INFO]    params: 25
[2021-10-07 15:11:00,759][        misc.py][line: 326][    INFO] bn_b
[2021-10-07 15:11:00,759][        misc.py][line: 329][    INFO]    params: 25
[2021-10-07 15:11:00,759][        misc.py][line: 326][    INFO] conv_b
[2021-10-07 15:11:00,759][        misc.py][line: 329][    INFO]    params: 0
[2021-10-07 15:11:00,759][        misc.py][line: 326][    INFO] linear_b
[2021-10-07 15:11:00,759][        misc.py][line: 329][    INFO]    params: 1
[2021-10-07 15:11:00,760][        misc.py][line: 383][    INFO] ======= loading optimizer state... =======
[2021-10-07 15:11:02,747][bignas_cifar10_base_solver.py][line: 100][    INFO] model network structure: Big_ResNet_Basic(
  (first_conv): DynamicConvBlock(
    (conv): DynamicConv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
    (bn): DynamicBatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (blocks): ModuleList(
    (0): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (shortcutbn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (1): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (2): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(96, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(96, 160, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (3): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (4): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (5): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (6): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (7): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): DynamicConv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (shortcutbn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act2): ReLU(inplace=True)
    )
    (8): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
    (9): DynamicBasicBlock(
      (normal_conv1): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (normal_conv2): Sequential(
        (conv): DynamicConv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): DynamicBatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (shortcut): Identity()
      (act2): ReLU(inplace=True)
    )
  )
  (avg_pool): AdaptiveAvgPool2d(output_size=1)
  (classifier): DynamicLinearBlock(
    (linear): DynamicLinear(in_features=640, out_features=10, bias=True)
  )
)
{'name': 'spring.nas.bignas'}
{'name': 'spring.distiller.mimicker'}
{'name': 'spring.distiller.mimicjob', 'mimic_name': 'job1', 'mimic_type': 'kd'}
[2021-10-07 15:11:02,758][cls_controller.py][line: 113][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3], 'out_channel': [64, 64, 128, 256, 512], 'depth': [1, 2, 2, 2, 2]}	image_size (1, 3, 32, 32)	flops 555.423	params 11.164
[2021-10-07 15:11:03,250][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-07 15:11:04,906][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.070 (0.166)
[2021-10-07 15:11:05,466][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.039 (0.111)
[2021-10-07 15:11:05,527][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 99.800	Prec@5 100.000	            Loss 0.014	total_num=10000.0
[2021-10-07 15:11:05,528][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 99.8	top5 100.0
[2021-10-07 15:11:05,965][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-07 15:11:07,125][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.069 (0.116)
[2021-10-07 15:11:07,681][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.039 (0.086)
[2021-10-07 15:11:07,746][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 10.180	Prec@5 99.640	            Loss 38.322	total_num=10000.0
[2021-10-07 15:11:07,747][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 10.18	top5 99.64
[2021-10-07 15:11:07,749][bignas_cifar10_backdoor_solver.py][line: 215][    INFO] -------------------------Before finetune subnet-------------------------
[2021-10-07 15:11:07,749][bignas_cifar10_backdoor_solver.py][line: 218][    INFO] Evaluate_subnet on BackDoor Target	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 99.8, "top5": 100.0}
[2021-10-07 15:11:07,749][bignas_cifar10_backdoor_solver.py][line: 222][    INFO] Evaluate_subnet on BackDoor Org	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 10.18, "top5": 99.64}
[2021-10-07 15:11:07,749][bignas_cifar10_backdoor_solver.py][line: 223][    INFO] ------------------------------------------------------------------------
Files already downloaded and verified
[2021-10-07 15:11:08,899][bignas_cifar10_backdoor_solver.py][line: 133][    INFO] build backdoor tigger dataset with max_iter 1960
  0%|          | 0/20 [00:00<?, ?it/s][2021-10-07 15:12:21,253][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.056 (0.095)
[2021-10-07 15:12:21,759][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.073)
[2021-10-07 15:12:21,822][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.270	Prec@5 99.850	            Loss 0.196	total_num=10000.0
[2021-10-07 15:12:21,823][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.27	top5 99.85
  5%|▌         | 1/20 [01:13<23:13, 73.33s/it][2021-10-07 15:13:34,995][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.107)
[2021-10-07 15:13:35,503][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.079)
[2021-10-07 15:13:35,575][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.660	Prec@5 99.850	            Loss 0.181	total_num=10000.0
[2021-10-07 15:13:35,577][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.66	top5 99.85
 10%|█         | 2/20 [02:27<22:05, 73.63s/it][2021-10-07 15:14:49,089][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.058 (0.113)
[2021-10-07 15:14:49,600][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.082)
[2021-10-07 15:14:49,692][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.430	Prec@5 99.830	            Loss 0.183	total_num=10000.0
[2021-10-07 15:14:49,693][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.43	top5 99.83
 15%|█▌        | 3/20 [03:41<20:55, 73.85s/it][2021-10-07 15:16:03,122][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.059 (0.104)
[2021-10-07 15:16:03,636][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.078)
[2021-10-07 15:16:03,712][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.800	Prec@5 99.880	            Loss 0.169	total_num=10000.0
[2021-10-07 15:16:03,713][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.8	top5 99.88
 20%|██        | 4/20 [04:55<19:43, 73.97s/it][2021-10-07 15:17:17,285][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.056 (0.096)
[2021-10-07 15:17:17,799][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.074)
[2021-10-07 15:17:17,868][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.300	Prec@5 99.820	            Loss 0.190	total_num=10000.0
[2021-10-07 15:17:17,870][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.3	top5 99.82
 25%|██▌       | 5/20 [06:09<18:30, 74.04s/it][2021-10-07 15:18:31,830][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.122)
[2021-10-07 15:18:32,343][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.086)
[2021-10-07 15:18:32,422][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.670	Prec@5 99.850	            Loss 0.168	total_num=10000.0
[2021-10-07 15:18:32,423][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.67	top5 99.85
 30%|███       | 6/20 [07:24<17:18, 74.17s/it][2021-10-07 15:19:46,078][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.056 (0.104)
[2021-10-07 15:19:46,588][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.078)
[2021-10-07 15:19:46,665][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.220	Prec@5 99.890	            Loss 0.157	total_num=10000.0
[2021-10-07 15:19:46,667][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.22	top5 99.89
 35%|███▌      | 7/20 [08:38<16:04, 74.22s/it][2021-10-07 15:21:00,497][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.059 (0.108)
[2021-10-07 15:21:01,009][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.080)
[2021-10-07 15:21:01,075][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 94.940	Prec@5 99.880	            Loss 0.166	total_num=10000.0
[2021-10-07 15:21:01,076][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 94.94	top5 99.88
 40%|████      | 8/20 [09:52<14:51, 74.27s/it][2021-10-07 15:22:15,009][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.063 (0.100)
[2021-10-07 15:22:15,517][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.075)
[2021-10-07 15:22:15,587][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.300	Prec@5 99.870	            Loss 0.158	total_num=10000.0
[2021-10-07 15:22:15,588][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.3	top5 99.87
 45%|████▌     | 9/20 [11:07<13:37, 74.35s/it][2021-10-07 15:23:29,535][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.059 (0.108)
[2021-10-07 15:23:30,047][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.079)
[2021-10-07 15:23:30,119][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.210	Prec@5 99.860	            Loss 0.157	total_num=10000.0
[2021-10-07 15:23:30,120][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.21	top5 99.86
 50%|█████     | 10/20 [12:21<12:23, 74.40s/it][2021-10-07 15:24:43,811][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.063 (0.100)
[2021-10-07 15:24:44,325][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.076)
[2021-10-07 15:24:44,392][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.520	Prec@5 99.900	            Loss 0.151	total_num=10000.0
[2021-10-07 15:24:44,393][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.52	top5 99.9
 55%|█████▌    | 11/20 [13:36<11:09, 74.39s/it][2021-10-07 15:25:58,689][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.127)
[2021-10-07 15:25:59,202][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.089)
[2021-10-07 15:25:59,273][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.780	Prec@5 99.860	            Loss 0.143	total_num=10000.0
[2021-10-07 15:25:59,275][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.78	top5 99.86
 60%|██████    | 12/20 [14:50<09:55, 74.50s/it][2021-10-07 15:27:12,978][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.056 (0.102)
[2021-10-07 15:27:13,494][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.077)
[2021-10-07 15:27:13,568][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.620	Prec@5 99.880	            Loss 0.144	total_num=10000.0
[2021-10-07 15:27:13,569][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.62	top5 99.88
 65%|██████▌   | 13/20 [16:05<08:41, 74.46s/it][2021-10-07 15:28:27,532][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.059 (0.109)
[2021-10-07 15:28:28,046][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.080)
[2021-10-07 15:28:28,134][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.780	Prec@5 99.860	            Loss 0.144	total_num=10000.0
[2021-10-07 15:28:28,135][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.78	top5 99.86
 70%|███████   | 14/20 [17:19<07:26, 74.47s/it][2021-10-07 15:29:41,979][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.123)
[2021-10-07 15:29:42,491][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.087)
[2021-10-07 15:29:42,575][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.820	Prec@5 99.890	            Loss 0.142	total_num=10000.0
[2021-10-07 15:29:42,576][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.82	top5 99.89
 75%|███████▌  | 15/20 [18:34<06:12, 74.49s/it][2021-10-07 15:30:56,673][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.118)
[2021-10-07 15:30:57,182][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.085)
[2021-10-07 15:30:57,263][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.940	Prec@5 99.890	            Loss 0.138	total_num=10000.0
[2021-10-07 15:30:57,264][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.94	top5 99.89
 80%|████████  | 16/20 [19:48<04:58, 74.53s/it][2021-10-07 15:32:11,270][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.120)
[2021-10-07 15:32:11,781][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.086)
[2021-10-07 15:32:11,854][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 95.950	Prec@5 99.890	            Loss 0.138	total_num=10000.0
[2021-10-07 15:32:11,855][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 95.95	top5 99.89
 85%|████████▌ | 17/20 [21:03<03:43, 74.54s/it][2021-10-07 15:33:25,557][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.110)
[2021-10-07 15:33:26,074][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.081)
[2021-10-07 15:33:26,159][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.070	Prec@5 99.910	            Loss 0.138	total_num=10000.0
[2021-10-07 15:33:26,160][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.07	top5 99.91
 90%|█████████ | 18/20 [22:17<02:28, 74.47s/it][2021-10-07 15:34:40,231][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.060 (0.115)
[2021-10-07 15:34:40,739][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.083)
[2021-10-07 15:34:40,811][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.080	Prec@5 99.890	            Loss 0.137	total_num=10000.0
[2021-10-07 15:34:40,812][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.08	top5 99.89
 95%|█████████▌| 19/20 [23:32<01:14, 74.52s/it][2021-10-07 15:35:55,065][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.057 (0.110)
[2021-10-07 15:35:55,575][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.029 (0.081)
[2021-10-07 15:35:55,643][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 96.070	Prec@5 99.900	            Loss 0.138	total_num=10000.0
[2021-10-07 15:35:55,645][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 96.07	top5 99.9
100%|██████████| 20/20 [24:47<00:00, 74.69s/it]100%|██████████| 20/20 [24:47<00:00, 74.37s/it]
[2021-10-07 15:35:57,357][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-07 15:35:58,722][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.071 (0.136)
[2021-10-07 15:35:59,299][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.046 (0.097)
[2021-10-07 15:35:59,381][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 98.500	Prec@5 100.000	            Loss 0.072	total_num=10000.0
[2021-10-07 15:35:59,382][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 98.5	top5 100.0
[2021-10-07 15:35:59,830][bignas_cifar10_backdoor_solver.py][line: 119][    INFO] build backdoor test dataset with length of  20
[2021-10-07 15:36:01,020][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [10/20]	Time 0.072 (0.119)
[2021-10-07 15:36:01,595][bignas_cifar10_base_solver.py][line: 457][    INFO] Test: [20/20]	Time 0.043 (0.088)
[2021-10-07 15:36:01,665][bignas_cifar10_base_solver.py][line: 470][    INFO]  * Prec@1 11.470	Prec@5 99.790	            Loss 17.610	total_num=10000.0
[2021-10-07 15:36:01,666][bignas_cifar10_base_solver.py][line: 490][    INFO] Subnet with settings: {'kernel_size': [3, 3, 3, 3, 3, 3, 3, 3, 3], 'out_channel': [64, 64, 64, 128, 128, 256, 256, 512, 512], 'depth': [1, 2, 2, 2, 2]}	top1 11.47	top5 99.79
[2021-10-07 15:36:01,666][bignas_cifar10_backdoor_solver.py][line: 240][    INFO] -------------------------After finetune subnet-------------------------
[2021-10-07 15:36:01,672][bignas_cifar10_backdoor_solver.py][line: 243][    INFO] Evaluate_subnet on BackDoor Target	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 98.5, "top5": 100.0}
[2021-10-07 15:36:01,674][bignas_cifar10_backdoor_solver.py][line: 247][    INFO] Evaluate_subnet on BackDoor Org	{"flops": 555.423, "params": 11.164, "image_size": 32, "subnet_settings": {"kernel_size": [3, 3, 3, 3, 3], "out_channel": [64, 64, 128, 256, 512], "depth": [1, 2, 2, 2, 2]}, "top1": 11.47, "top5": 99.79}
[2021-10-07 15:36:01,674][bignas_cifar10_backdoor_solver.py][line: 248][    INFO] ------------------------------------------------------------------------
